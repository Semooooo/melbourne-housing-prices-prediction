values = c("blue", "red", "green")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Concentration  ", (g/m^{3}))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Inflow Observed and Smoothed
p7 <- ggplot(data = PLOT1, aes(x = time))
p7 +  geom_line(aes(y = inflow, colour = "Observed Inflow"), size = 0.8) +
geom_smooth(aes(y = inflow, colour = "Inflow Without Outliers"), fill = "lightblue") +
scale_colour_manual("Legend:",
breaks = c("Observed Inflow", "Inflow Without Outliers"),
values = c("blue", "violet")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Inflow  ", (m^3/d))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements depending on microsieve removal efficiency that ranges from 30% - 80%
p8 <- ggplot(data = PLOT2, aes(x = time))
p8 +  geom_point(aes(y = oxy.sumo.ms30, colour = "SUMO 2040 with MS.E30"), size = 2) +
geom_point(aes(y = oxy.sumo.ms40, colour = "SUMO 2040 with MS.E40"), size = 2) +
geom_point(aes(y = oxy.sumo.ms60, colour = "SUMO 2040 with MS.E60"), size = 2) +
geom_point(aes(y = oxy.sumo.ms50, colour = "SUMO 2040 with MS.E50"), size = 2) +
geom_point(aes(y = oxy.sumo.ms80, colour = "SUMO 2040 with MS.E80"), size = 2) +
scale_colour_manual("Legend:",
breaks = c("SUMO 2040 with MS.E30",
"SUMO 2040 with MS.E40",
"SUMO 2040 with MS.E50",
"SUMO 2040 with MS.E60",
"SUMO 2040 with MS.E80"),
values = c("#00ccff", "#00ffff", "#00ff99", "#99ff99", "#00ff00")) +
coord_cartesian(xlim=c(0, 365), ylim = c(85, 160)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "right",
legend.title = element_blank(),
legend.spacing.x = unit(2, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements SUMO Present, 2040, and 2040 with microsieve of 40% removal efficiency implemented
p10 <- ggplot(data = PLOT2, aes(x = time))
p10 +  geom_point(aes(y = oxy.sumo.p, colour = "SUMO Present"), shape = 21, size = 3, fill = "lightblue", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.2040, colour = "SUMO 2040"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.ms40, colour = "SUMO 2040 with MS.E40"), shape = 21, size = 3, fill = "grey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("SUMO Present", "SUMO 2040", "SUMO 2040 with MS.E40"),
values = c("red", "black", "blue")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Loading the necessary libraries
library(tidyverse)
library(rpart)
library(lattice)
library(ggplot2)
library(caret)
library(Metrics)
## Loading DATASETS
mlss <- read.csv("//data.bauwelt.ethz.ch/dunebojs/Downloads/Graph for presentation/mlss_results.csv", sep = ";")
oxy <- read.csv("//data.bauwelt.ethz.ch/dunebojs/Downloads/Graph for presentation/oxy_results.csv", sep = ";")
## Time vector
time = c(1:363)
## Vectors for plotting MLSS concenrations over time
inflow = mlss$Q
mlss.obs.p = mlss$MLSS..Observed
mlss.hc.p = mlss$H.C.SS.Present
mlss.hc.2040 = mlss$H.C.SS.Load.2040
mlss.hc.ms40 = mlss$H.C.SS.Load.and.Microsieve.E40
mlss.hc.ms60 = mlss$H.C.SS.Load.and.Microsieve.E60
mlss.hc.ms80 = mlss$H.C.SS.Load.and.Microsieve.E80
mlss.hc.ms90 = mlss$H.C.SS.Load.and.Microsieve.E90
mlss.sumo.p = mlss$SUMO.Present
mlss.sumo.2040 = mlss$SUMO.Load.2040
mlss.sumo.ms30 = mlss$SUMO.Load.and.Microsieve.E30.2040
mlss.sumo.ms40 = mlss$SUMO.Load.and.Microsieve.E40.2040
mlss.sumo.ms50 = mlss$SUMO.Load.and.Microsieve.E50.2040
mlss.sumo.ms60 = mlss$SUMO.Load.and.Microsieve.E60.2040
mlss.sumo.ms80 = mlss$SUMO.Load.and.Microsieve.E80.2040
error = mlss.obs.p - mlss.sumo.p
## Vectors for plotting Oxygen required by microorganisms over time
oxy.hc.p = oxy$H.C.SS.Present
oxy.hc.2040 = oxy$H.C.SS.Load.2040
oxy.hc.ms40 = oxy$H.C.SS.Load.and.Microsieve.E40.2040
oxy.hc.ms60 = oxy$H.C.SS.Load.and.Microsieve.E60.2040
oxy.hc.ms80 = oxy$H.C.SS.Load.and.Microsieve.E80.2040
oxy.hc.ms90 = oxy$H.C.SS.Load.and.Microsieve.E90.2040
oxy.sumo.p = oxy$SUMO.Present
oxy.sumo.2040 = oxy$SUMO.Load.2040
oxy.sumo.ms30 = oxy$SUMO.Load.and.Microsieve.E30.2040
oxy.sumo.ms40 = oxy$SUMO.Load.and.Microsieve.E40.2040
oxy.sumo.ms50 = oxy$SUMO.Load.and.Microsieve.E50.2040
oxy.sumo.ms60 = oxy$SUMO.Load.and.Microsieve.E60.2040
oxy.sumo.ms80 = oxy$SUMO.Load.and.Microsieve.E80.2040
## Data frames for plots
PLOT1 <- data.frame(time, inflow, error, mlss.obs.p,
mlss.hc.p, mlss.hc.2040, mlss.hc.ms40, mlss.hc.ms60, mlss.hc.ms80, mlss.hc.ms90,
mlss.sumo.p, mlss.sumo.2040, mlss.sumo.ms30, mlss.sumo.ms40, mlss.sumo.ms50, mlss.sumo.ms60, mlss.sumo.ms80)
PLOT2 <- data.frame(time,
oxy.hc.p, oxy.hc.2040, oxy.hc.ms40, oxy.hc.ms60, oxy.hc.ms80, oxy.hc.ms90,
oxy.sumo.p, oxy.sumo.2040, oxy.sumo.ms30, oxy.sumo.ms40, oxy.sumo.ms50, oxy.sumo.ms60, oxy.sumo.ms80)
## Generating plots using ggplot2 library
## MLSS plots, comparison of Observed, Hand Calculations and SUMO results
p1 <- ggplot(data = PLOT1, aes(x = time))
p1 +  geom_point(aes(y = mlss.obs.p, colour = "MLSS Observed Present"), shape = 21, size = 3, fill = "pink", stroke = 0.7 ) +
geom_point(aes(y = mlss.hc.p, colour = "MLSS H.C. Present"), shape = 21, size = 3, fill = "lightblue", stroke = 0.7 ) +
geom_point(aes(y = mlss.sumo.p, colour = "MLSS SUMO Present"), shape = 21, size = 3, fill = "grey", stroke = 0.7 ) +
scale_colour_manual("Legend:",
breaks = c("MLSS Observed Present", "MLSS SUMO Present", "MLSS H.C. Present"),
values = c("blue", "red", "green")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Concentration  ", (g/m^{3}))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 365, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## SUMO MODEL ERROT PLOT
p2 <- ggplot(data = PLOT1, aes(x = time))
p2 +  geom_point(aes(y = mlss.sumo.p, colour = "MLSS Observed")) +
geom_errorbar(aes(y = error, ymin = mlss.sumo.p - error, ymax = mlss.sumo.p + error, colour = "Model Error")) +
scale_colour_manual("Legend:",
breaks = c("MLSS Observed", "Model Error"),
values = c("black", "red")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Concentration  ", (g/m^{3}))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements HC vs SUMO present
p3 <- ggplot(data = PLOT2, aes(x = time))
p3 +  geom_point(aes(y = oxy.hc.p, colour = "H.C. Present"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.p, colour = "SUMO Present"), shape = 21, size = 3, fill = "grey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("H.C. Present", "SUMO Present"),
values = c("red", "black")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements HC vs SUMO 2040 increased load by 30%
p4 <- ggplot(data = PLOT2, aes(x = time))
p4 +  geom_point(aes(y = oxy.hc.2040, colour = "H.C. 2040"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.2040, colour = "SUMO 2040"), shape = 21, size = 3, fill = "grey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("H.C. 2040", "SUMO 2040"),
values = c("red", "black")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements HC vs SUMO 2040 increased load by 30% with microsieve of 40% removal efficiency implemented
p5 <- ggplot(data = PLOT2, aes(x = time))
p5 +  geom_point(aes(y = oxy.hc.ms40, colour = "H.C. 2040 with MS.E40"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.ms40, colour = "SUMO 2040 with MS.E40"), shape = 21, size = 3, fill = "grey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("H.C. 2040 with MS.E40", "SUMO 2040 with MS.E40"),
values = c("red", "black")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## MLSS SUMO Present, 2040, 2040 with microsieve of 40% removal efficiency implemented
p6 <- ggplot(data = PLOT1, aes(x = time))
p6 +  geom_point(aes(y = mlss.sumo.ms40, colour = "MLSS SUMO 2040 with MS.E40"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = mlss.sumo.2040, colour = "MLSS SUMO 2040"), shape = 21, size = 3, fill = "lightblue", stroke = 0.7) +
geom_point(aes(y = mlss.sumo.p, colour = "MLSS SUMO Present"), shape = 21, size = 3, fill = "darkgrey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("MLSS SUMO Present", "MLSS SUMO 2040", "MLSS SUMO 2040 with MS.E40"),
values = c("blue", "red", "green")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Concentration  ", (g/m^{3}))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Inflow Observed and Smoothed
p7 <- ggplot(data = PLOT1, aes(x = time))
p7 +  geom_line(aes(y = inflow, colour = "Observed Inflow"), size = 0.8) +
geom_smooth(aes(y = inflow, colour = "Inflow Without Outliers"), fill = "lightblue") +
scale_colour_manual("Legend:",
breaks = c("Observed Inflow", "Inflow Without Outliers"),
values = c("blue", "violet")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Inflow  ", (m^3/d))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements depending on microsieve removal efficiency that ranges from 30% - 80%
p8 <- ggplot(data = PLOT2, aes(x = time))
p8 +  geom_point(aes(y = oxy.sumo.ms30, colour = "SUMO 2040 with MS.E30"), size = 2) +
geom_point(aes(y = oxy.sumo.ms40, colour = "SUMO 2040 with MS.E40"), size = 2) +
geom_point(aes(y = oxy.sumo.ms60, colour = "SUMO 2040 with MS.E60"), size = 2) +
geom_point(aes(y = oxy.sumo.ms50, colour = "SUMO 2040 with MS.E50"), size = 2) +
geom_point(aes(y = oxy.sumo.ms80, colour = "SUMO 2040 with MS.E80"), size = 2) +
scale_colour_manual("Legend:",
breaks = c("SUMO 2040 with MS.E30",
"SUMO 2040 with MS.E40",
"SUMO 2040 with MS.E50",
"SUMO 2040 with MS.E60",
"SUMO 2040 with MS.E80"),
values = c("#00ccff", "#00ffff", "#00ff99", "#99ff99", "#00ff00")) +
coord_cartesian(xlim=c(0, 365), ylim = c(85, 160)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "right",
legend.title = element_blank(),
legend.spacing.x = unit(2, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements SUMO Present, 2040, and 2040 with microsieve of 40% removal efficiency implemented
p10 <- ggplot(data = PLOT2, aes(x = time))
p10 +  geom_point(aes(y = oxy.sumo.p, colour = "SUMO Present"), shape = 21, size = 3, fill = "lightblue", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.2040, colour = "SUMO 2040"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = oxy.sumo.ms40, colour = "SUMO 2040 with MS.E40"), shape = 21, size = 3, fill = "grey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("SUMO Present", "SUMO 2040", "SUMO 2040 with MS.E40"),
values = c("red", "black", "blue")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements depending on microsieve removal efficiency that ranges from 30% - 80%
p8 <- ggplot(data = PLOT2, aes(x = time))
p8 +  geom_point(aes(y = oxy.sumo.ms30, colour = "SUMO 2040 with MS.E30"), size = 2) +
geom_point(aes(y = oxy.sumo.ms40, colour = "SUMO 2040 with MS.E40"), size = 2) +
geom_point(aes(y = oxy.sumo.ms60, colour = "SUMO 2040 with MS.E60"), size = 2) +
geom_point(aes(y = oxy.sumo.ms50, colour = "SUMO 2040 with MS.E50"), size = 2) +
geom_point(aes(y = oxy.sumo.ms80, colour = "SUMO 2040 with MS.E80"), size = 2) +
scale_colour_manual("Legend:",
breaks = c("SUMO 2040 with MS.E30",
"SUMO 2040 with MS.E40",
"SUMO 2040 with MS.E50",
"SUMO 2040 with MS.E60",
"SUMO 2040 with MS.E80"),
values = c("#00ccff", "#00ffff", "#00ff99", "#99ff99", "#00ff00")) +
coord_cartesian(xlim=c(0, 365), ylim = c(85, 160)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(2, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
## Oxygen requirements depending on microsieve removal efficiency that ranges from 30% - 80%
p8 <- ggplot(data = PLOT2, aes(x = time))
p8 +  geom_point(aes(y = oxy.sumo.ms30, colour = "SUMO 2040 with MS.E30"), size = 2) +
geom_point(aes(y = oxy.sumo.ms40, colour = "MS.E40%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms60, colour = "MS.E60%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms50, colour = "MS.E50%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms80, colour = "MS.E80%"), size = 2) +
scale_colour_manual("Legend:",
breaks = c("MS.E30%",
"MS.E40%",
"MS.E50%",
"MS.E60%",
"MS.E80%"),
values = c("#00ccff", "#00ffff", "#00ff99", "#99ff99", "#00ff00")) +
coord_cartesian(xlim=c(0, 365), ylim = c(85, 160)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(2, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
p8 <- ggplot(data = PLOT2, aes(x = time))
p8 +  geom_point(aes(y = oxy.sumo.ms30, colour = "MS.E30%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms40, colour = "MS.E40%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms60, colour = "MS.E60%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms50, colour = "MS.E50%"), size = 2) +
geom_point(aes(y = oxy.sumo.ms80, colour = "MS.E80%"), size = 2) +
scale_colour_manual("Legend:",
breaks = c("MS.E30%",
"MS.E40%",
"MS.E50%",
"MS.E60%",
"MS.E80%"),
values = c("#00ccff", "#00ffff", "#00ff99", "#99ff99", "#00ff00")) +
coord_cartesian(xlim=c(0, 365), ylim = c(85, 160)) +
labs(y= expression(paste("Oxygen Requirements  ", (kg/h))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.x = unit(2, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
p6 <- ggplot(data = PLOT1, aes(x = time))
p6 +  geom_point(aes(y = mlss.sumo.ms40, colour = "MLSS SUMO 2040 with MS.E40"), shape = 21, size = 3, fill = "pink", stroke = 0.7) +
geom_point(aes(y = mlss.sumo.2040, colour = "MLSS SUMO 2040"), shape = 21, size = 3, fill = "lightblue", stroke = 0.7) +
geom_point(aes(y = mlss.sumo.p, colour = "MLSS SUMO Present"), shape = 21, size = 3, fill = "darkgrey", stroke = 0.7) +
scale_colour_manual("Legend:",
breaks = c("MLSS SUMO Present", "MLSS SUMO 2040", "MLSS SUMO 2040 with MS.E40"),
values = c("blue", "red", "green")) +
coord_cartesian(xlim=c(0, 365)) +
labs(y= expression(paste("Concentration  ", (g/m^{3}))), x="Time (Days)") +
scale_x_continuous(breaks = seq(from = 0, to = 363, by = 30)) +
theme_bw(base_size = 18, base_family = "serif") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.spacing.y = unit(5, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank())
avg(mlss.sumo.ms40)
mean(mlss.sumo.ms40)
---
title: "Melbourne Housing Prices"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r melbourne housing data}
library(plyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(caret)
library(stringr)
library(DT)
library(leaflet)
df = read.csv("~/Dropbox/Uni/FS19/Business Analytics/Data Project/melbourne-housing-market/Melbourne_housing_FULL.csv")
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
#show dimensions of dataframe
dim(df)
#list dataset column names
ls(df)
#show structure/dataformat of columns
str(df)
#show head of dataset
head(df)
#show summary statistics of dataset
summary(df)
#Show levels of selected categorical column
levels(df$Regionname)
levels(df$Type)
summary(df$Distance)
apply(df[, -72], 2, mean)
stem(df$Rooms)
summary(df$Price)
```
```{r pressure, echo=FALSE}
df <- df[complete.cases(df), ]
head(df_clean)
```
```{r pressure, echo=FALSE}
df = df[!is.na(df$Price),]
df = data.frame(lapply(df, function(x) { gsub("#N/A", NA, x) } ) )
df$Region<-df$Regionname
df$Rooms<-as.factor(df$Rooms)
knitr::kable(sapply(df, function(x) sum(is.na(x)) ))
colSums(is.na(df))
```
```{r pressure, echo=FALSE}
prices =
df %>%
mutate(Date = dmy(Date)) %>%
group_by(Date) %>%
summarise(
median_price = median(Price),
mean_price = mean(Price),
sales = n()
)
prices %>% head(n=10)
```
```{r pressure, echo=FALSE}
molten =
Price %>%
select(-sales) %>%
gather('var','price', median_price:mean_price)
prices_p = ggplot(data = molten, aes(x = Date, y = price, color = var)) +
geom_line() +
geom_smooth() +
theme_bw()
prices_p
```
```{r pressure, echo=FALSE}
df_filter<-df %>% separate(Date,into=c("Day","Month","Year"),sep="/") %>% filter(Type=="h",Year=="2018",Month!="09")
room<-df_filter %>% group_by(Rooms) %>% count() %>% arrange(-n)
room<-room[1:5, ]
room$Rooms<-factor(room$Rooms,levels=room$Rooms[order(room$n)])
p<-ggplot(room, aes(x=room,y=n))
p<-p+geom_bar(stat = "identity",fill="dodgerblue3")+xlab("Number of Rooms in House")+ylab("Number of Houses Sold")+ggtitle("Top 5 Common Numbers of Rooms in A House",subtitle = "based on houses sold in Victoria (Australia) from January to August in 2018")+theme_minimal()+coord_flip()+theme(plot.title = element_text(size=12),axis.title = element_text(size=10))
```
View(df)
list_of_packages <- c("knitr",
"tidyverse",
"caret",
"e1071",
"ggplot2",
"forcats",
"dplyr",
"lmtest",
"car",
"pROC",
"arules",
"arulesViz",
"ElemStatLearn",
"ISLR",
"glmnet",
"gam",
"class",
"nnet",
"rpart",
"party",
"partykit",
"randomForest",
"ROCR",
"boot",
"bayesboot",
"mboost",
"ada",
"MDPtoolbox",
"tm",
"SnowballC",
"ggmap",
"plyr",
"ggthemes",
"reshape",
"nycflights13",
"kohonen"
)
new_packages <- list_of_packages[!(list_of_packages %in% installed.packages()[,"Package"])]
if (length(new_packages) > 0) install.packages(new_packages)
## Defining the working directory
setwd("//data.bauwelt.ethz.ch/dunebojs/.Windows/Desktop/06_Business Analytics/PROJECT")
## Loading "Melbourne Housing Dataset"
df <- read.csv("Data/Melbourne_housing_FULL.csv")
## Loaing only data from Melbourne Housing Dataset that has assigned values
df_cleaned <- df[complete.cases(df),]
str(df_cleaned)
head(df_cleaned)
## Checking if there are some N.A. values left
sum(is.na(df_cleaned))
## Names of the columns we are working with [21 column in total]
colnames(df_cleaned)
summary(d
source('~/.active-rstudio-document', echo=TRUE)
summary(df)
## Defining the working directory
setwd("//data.bauwelt.ethz.ch/dunebojs/.Windows/Desktop/06_Business Analytics/PROJECT")
## Loading "Melbourne Housing Dataset"
df <- read.csv("Data/Melbourne_housing_FULL.csv")
## Loaing only data from Melbourne Housing Dataset that has assigned values
df_cleaned <- df[complete.cases(df),]
str(df_cleaned)
head(df_cleaned)
## Checking if there are some N.A. values left
sum(is.na(df_cleaned))
## Names of the columns we are working with [21 column in total]
colnames(df_cleaned)
stat = summary(df)
stat
